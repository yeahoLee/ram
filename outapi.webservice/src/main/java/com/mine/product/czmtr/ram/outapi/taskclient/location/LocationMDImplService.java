package com.mine.product.czmtr.ram.outapi.taskclient.location;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ResourceBundle;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2019-05-29T10:37:48.062+08:00
 * Generated source version: 3.2.7
 */
@WebServiceClient(name = "LocationMDImplService",
        wsdlLocation = "http://10.0.42.6:7001/czeam-web/webservice/location?wsdl",
        targetNamespace = "http://location.api.adam.hitina.net/")
public class LocationMDImplService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://location.api.adam.hitina.net/", "LocationMDImplService");
    public final static QName LocationMDImplPort = new QName("http://location.api.adam.hitina.net/", "LocationMDImplPort");

    static {
        URL url = null;
        try {
             //动态获取方式
            ResourceBundle resource = ResourceBundle.getBundle("config.serviceIp");
            String iP = resource.getString("SBWX.IP").trim();
            url = new URL(iP + "/czeam-web/webservice/location?wsdl");

        	//生产环境地址http://10.0.52.205:7001/czeam-web/webservice/location?wsdl
        	//测试环境地址http://10.0.42.6:7001/czeam-web/webservice/location?wsdl
//            url = new URL("http://10.0.42.6:7001/czeam-web/webservice/location?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(LocationMDImplService.class.getName())
                    .log(java.util.logging.Level.INFO,
                            "Can not initialize the default wsdl from {0}", "http://10.0.42.6:7001/czeam-web/webservice/location?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public LocationMDImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public LocationMDImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LocationMDImplService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public LocationMDImplService(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public LocationMDImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public LocationMDImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }


    /**
     * @return returns LocationMD
     */
    @WebEndpoint(name = "LocationMDImplPort")
    public LocationMD getLocationMDImplPort() {
        return super.getPort(LocationMDImplPort, LocationMD.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns LocationMD
     */
    @WebEndpoint(name = "LocationMDImplPort")
    public LocationMD getLocationMDImplPort(WebServiceFeature... features) {
        return super.getPort(LocationMDImplPort, LocationMD.class, features);
    }

}
