
package com.mine.product.czmtr.ram.outapi.taskclient.osbData;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ResourceBundle;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "osb_data", targetNamespace = "http://org.osb.service/", wsdlLocation = "http://10.0.41.15:7003/osb_getdata/osb_data?WSDL")
public class OsbData_Service
        extends Service {

    private final static URL OSBDATA_WSDL_LOCATION;
    private final static WebServiceException OSBDATA_EXCEPTION;
    private final static QName OSBDATA_QNAME = new QName("http://org.osb.service/", "osb_data");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            //动态获取方式
            ResourceBundle resource = ResourceBundle.getBundle("config.serviceIp");
            String iP = resource.getString("BEIMING.IP").trim();
            url = new URL(iP + "/osb_getdata/osb_data?WSDL");

//            url = new URL("http://10.0.41.15:7003/osb_getdata/osb_data?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        OSBDATA_WSDL_LOCATION = url;
        OSBDATA_EXCEPTION = e;
    }

    public OsbData_Service() {
        super(__getWsdlLocation(), OSBDATA_QNAME);
    }

    public OsbData_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), OSBDATA_QNAME, features);
    }

    public OsbData_Service(URL wsdlLocation) {
        super(wsdlLocation, OSBDATA_QNAME);
    }

    public OsbData_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, OSBDATA_QNAME, features);
    }

    public OsbData_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OsbData_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns OsbData
     */
    @WebEndpoint(name = "osb_dataPort")
    public OsbData getOsbDataPort() {
        return super.getPort(new QName("http://org.osb.service/", "osb_dataPort"), OsbData.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns OsbData
     */
    @WebEndpoint(name = "osb_dataPort")
    public OsbData getOsbDataPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://org.osb.service/", "osb_dataPort"), OsbData.class, features);
    }

    private static URL __getWsdlLocation() {
        if (OSBDATA_EXCEPTION != null) {
            throw OSBDATA_EXCEPTION;
        }
        return OSBDATA_WSDL_LOCATION;
    }

}
