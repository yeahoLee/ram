package com.mine.product.czmtr.ram.outapi.taskclient.changeAsset;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ResourceBundle;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2019-11-26T10:19:48.335+08:00
 * Generated source version: 3.2.7
 */
@WebServiceClient(name = "NC_dr_Ixml",
        wsdlLocation = "http://10.0.55.10:8888/uapws/service/nc.itf.fa.NC_dr_Ixml?wsdl",
        targetNamespace = "http://fa.itf.nc/NC_dr_Ixml")
public class NCDrIxml extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://fa.itf.nc/NC_dr_Ixml", "NC_dr_Ixml");
    public final static QName NCDrIxmlSOAP11PortHttp = new QName("http://fa.itf.nc/NC_dr_Ixml", "NC_dr_IxmlSOAP11port_http");

    static {
        URL url = null;
        try {
            //动态获取方式
            ResourceBundle resource = ResourceBundle.getBundle("config.serviceIp");
            String iP = resource.getString("CW.IP").trim();
            url = new URL(iP + "/uapws/service/nc.itf.fa.NC_dr_Ixml?wsdl");

//            url = new URL("http://10.0.55.10:8888/uapws/service/nc.itf.fa.NC_dr_Ixml?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(NCDrIxml.class.getName())
                    .log(java.util.logging.Level.INFO,
                            "Can not initialize the default wsdl from {0}", "http://10.0.55.10:8888/uapws/service/nc.itf.fa.NC_dr_Ixml?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public NCDrIxml(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public NCDrIxml(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public NCDrIxml() {
        super(WSDL_LOCATION, SERVICE);
    }

    public NCDrIxml(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public NCDrIxml(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public NCDrIxml(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns NCDrIxmlPortType
     */
    @WebEndpoint(name = "NC_dr_IxmlSOAP11port_http")
    public NCDrIxmlPortType getNCDrIxmlSOAP11PortHttp() {
        return super.getPort(NCDrIxmlSOAP11PortHttp, NCDrIxmlPortType.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns NCDrIxmlPortType
     */
    @WebEndpoint(name = "NC_dr_IxmlSOAP11port_http")
    public NCDrIxmlPortType getNCDrIxmlSOAP11PortHttp(WebServiceFeature... features) {
        return super.getPort(NCDrIxmlSOAP11PortHttp, NCDrIxmlPortType.class, features);
    }

}
